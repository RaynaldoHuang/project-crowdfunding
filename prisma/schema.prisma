// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
}

enum Role {
  MEMBER
  ADMIN
}

enum Status {
  ONGOING
  PENDING
  CANCELED
}


model Account {
  id            Int          @id @default(autoincrement())
  
  // One to one -> Profile
  profile       Profile?
  
  username      String          @unique @db.VarChar(255)
  email         String          @db.VarChar(255)
  password      String          @db.VarChar(255)
}


model Profile {
  id                  Int        @id @default(autoincrement())
  // One to one -> Account
  accountUsername     String        @unique
  username            Account       @relation(fields: [accountUsername], references: [username])

  // One to Many -> Donation, TopUp, DonationHistory
  // donation            Donation[]
  // topUp               TopUp[]
  // donationHistory     DonationHistory[]

  // Enums
  gender              Gender        @default(MALE)
  role                Role          @default(MEMBER)

  city                String        @db.VarChar(255)
  birthdate           DateTime
  address             String 
  whatsapp            String
  firstName           String
  lastName            String
  createdDate         DateTime      @default(now())

  // virtualNumber?
}

model Campaign {
  id                  Int           @id @default(autoincrement())
  eventName           String        @db.VarChar(255)
  createdDate         DateTime      @default(now())
  fundsNeeded         Int           @default(0)
  fundsAccumulated    Int           @default(0)
  deadline            DateTime
  eventDescription    String
  // document
  status              Status        @default(CANCELED)
}

// model VirtualBank {
//   id    BigInt    @id @default(autoincrement())
//   // virtual number 
//   amount  BigInt  @default(0)
// }

// model TopUp {
//   id    BigInt    @id @default(autoincrement())

//   // One to Many -> Profile
//   profileId   BigInt
//   profile     Profile   @relation(fields: [profileId], references: [id])

//   date  DateTime  @default(now())
//   amount  BigInt
//   news    String?
// }

// model DonationHistory {
//   id    BigInt    @id @default(autoincrement())

//   // One To Many -> Profile
//   profileId     BigInt
//   profile       Profile     @relation(fields: [profileId], references: [id])
// }

// model CampaignDocument {
//   id  BigInt  @id @default(autoincrement())
//   images  Bytes
//   pdf   Bytes
// }

// model DonationRequest {
//   id  BigInt  @id @default(autoincrement())
//   // profile
//   requestedDate DateTime
//   fundsNeeded   BigInt  @default(0)
//   description   String
//   // document id
// }

// model DocumentRequest {
//   id  BigInt  @id @default(autoincrement())
//   image Bytes
//   pdf Bytes
// }

// model Donation {
//   id  BigInt  @id @default(autoincrement())
//   // campaign id
//   // One to Many -> Profile
//   profileId   BigInt
//   profile     Profile   @relation(fields: [profileId], references: [id])

//   donationDate DateTime
//   amount BigInt @default(0)
// }